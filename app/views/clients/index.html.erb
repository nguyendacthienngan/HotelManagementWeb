	<div class="employee_top_breadcrumb">
		<nav class="page-section" style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
			<div class="row">
				<div class="col-sm-6">
					<div class="d-flex justify-content-start">
						<ol class="breadcrumb">
							<li class="breadcrumb-item"><a href="#">Cấu hình</a></li>
							<li class="breadcrumb-item active" aria-current="page">Khách hàng</li>
						</ol>
					</div>
				</div>
			</div>
		</nav>
	
	</div>
	
	<div class="client_main_view">
	
			<div class="left_container">
				<div class="section_name" >
					Danh sách: <%= @clients.ids.count %> khách hàng
				</div>
				<table>
						<tr>
							<th class="client_row_title_infoBasic">HỌ TÊN KHÁCH HÀNG</th>
							<th class="client_row_title_type">LOẠI</th>
							<th class="client_row_title_gender">GIỚI TÍNH</th>
							<th class="client_row_title_phone">SỐ ĐIỆN THOẠI</th>
							<th class="client_row_title_email">EMAIL</th>
							<th class="client_row_title_dob">NGÀY SINH</th> 
						</tr>
	
						<% @clients.each do |client| %>
							<tr class="client_row">
								<td class="client_row_infoBasic">
									<div class="info_basic_container">
										<span class="client_row_name"><%= client.name %></span>
										<span class="client_row_id hide"><%= client.id %></span>
									</div>
								</td>
								<td class="client_row_type">
								<span id="client_typeId" class="hide"><%= client.client_type %></span>
									<% if client.client_type == 0 %>
										<span>Khách lữ hành</span>
									<% elsif client.client_type == 1 %>
										<span>Thành viên</span>
									<% end %>
								</td>
								<td class="client_row_gender">
								<span id="client_genderId" class="hide"><%= client.gender %></span>
									<% if client.gender == 0 %>
										<span>Nam</span>
									<% elsif client.gender == 1 %>
										<span>Nữ</span>
									<% elsif client.gender == 2 %>
                        				<span>Khác</span>
									<% end %>
								</td>
								<td class="client_row_phone"> <%= client.phone_number %></td>
								<td class="client_row_email"> <%= client.email %></td>
								<td id='client_dob' class="client_row_dob"> <%= Date.parse(client.date_of_birth.to_s) %></td>
								
							</tr>
						<% end %>
				</table>
				<div id="client_row_empty" class="hide_empty">
					<i class="fas fa-exclamation-triangle"></i>
					<span>No row matched !</span>
				</div>
			</div>
	
	
			<div class="right_container">
					<div class="section_name">Hành động</div>
					<div class="functionalities ">
					<%= link_to new_client_path do%><div class="functionality_add btn btn-primary">Thêm</div><% end %>
					</div>
					<div class="functionalities">
							<div id="client_btn_show" class="functionality_item">Xem</div>
							<div id="client_btn_delete" class=" functionality_item ">Xóa</div>
							<div id="client_btn_edit" class="functionality_item ">Sửa</div>
					</div>
	
					<div class="section_name">Tìm kiếm</div>
					<div class="timkiem_container">
						<input id="client_input_filter"/>
					</div>
	
					<div class="section_name">Bộ lọc tìm kiếm</div>
	
					<div class="boloc_container">
						<div id="boloc_client_gender"><strong> > Giới tính</strong>
						</div>
						<div id="boloc_client_type"><strong> > Loại</strong>
						</div>
						<div ><strong> > Tháng sinh nhật</strong>
							<div class="boloc_item">
								<select id="boloc_client_dob" ></select>
							</div>
						</div>
					</div>
				</div>
	
			</div>
	</div>
	
	<script>
	let selectedID;
	let filterByString = '';
    let filterByGender = [
        {
            label: "Nam",
            status: false
        },
        {
            label: "Nữ",
            status: false
        },
        {
            label: "Khác",
            status: false
        },
    ];
    let filterByType = [
        {
            label: "Khách lữ hành",
            status: false
        },
        {
            label: "Thành viên",
            status: false
        },
    ];
	let filterByDobSelectedOption = '';
	let filterByDobOptions = [
		{
            label: "-",
        },
        {
            label: "Tháng 1",
        },
        {
            label: "Tháng 2",
        },
		{
            label: "Tháng 3",
        },
		{
            label: "Tháng 4",
        },
		{
            label: "Tháng 5",
        },
		{
            label: "Tháng 6",
        },
		{
            label: "Tháng 7",
        },
		{
            label: "Tháng 8",
        },
		{
            label: "Tháng 9",
        },
		{
            label: "Tháng 10",
        },
		{
            label: "Tháng 11",
        },
		{
            label: "Tháng 12",
        },
    ];

	let allClients = document.querySelectorAll(".client_row");
	let allButtonNotClick = document.querySelectorAll(".functionality_item");
	
	for(let i=0; i<allClients.length; i++){
		allClients[i].addEventListener('click', function(){
					for (let previousSelectedRow of document.querySelectorAll(".row_selected")) {
							previousSelectedRow.classList.remove("row_selected");
					}
					
					selectedID = allClients[i].querySelector(".client_row_id").innerHTML * 1;
					this.classList.add("row_selected");
					for(let i=0; i<allButtonNotClick.length; i++){
							allButtonNotClick[i].classList.remove("functionality_item");
							allButtonNotClick[i].classList.add("button_selected");
					}
			});
	}

	document.querySelector("#client_btn_edit").addEventListener('click', function(){
			if (selectedID > 0) {
					window.location = `${window.location}/${selectedID}/edit`;
			}
			
	});
	document.querySelector("#client_btn_show").addEventListener('click', function(){
			if (selectedID > 0) {
					window.location = `${window.location}/${selectedID}`;
			}
	});

	// RenderFilterGenderCheckboxes
    filterByGender.forEach((e,i) => {
        let divTag = document.createElement("div");
        divTag.setAttribute("class", "boloc_item");
        divTag.innerHTML = `
            <input class="boloc_checkbox" type="checkbox"/>
            <span class="boloc_label">${e.label}</span>
        `
        divTag.addEventListener('change', function() {
            filterByGender[i].status = this.querySelector(".boloc_checkbox").checked;
            updateTable();
        });
        document.querySelector("#boloc_client_gender").append(divTag);
        
    })
    // RenderFilterTypeCheckboxes
    filterByType.forEach((e,i) => {
        let divTag = document.createElement("div");
        divTag.setAttribute("class", "boloc_item");
        divTag.innerHTML = `
            <input class="boloc_checkbox" type="checkbox"/>
            <span class="boloc_label">${e.label}</span>
        `
        divTag.addEventListener('change', function() {
            filterByType[i].status = this.querySelector(".boloc_checkbox").checked;
            updateTable();
        });
        document.querySelector("#boloc_client_type").append(divTag);
    })
	let selectTag = document.getElementById("boloc_client_dob");
	// RenderFilterDobSelect
    filterByDobOptions.forEach((e,i) => {
  		let option = document.createElement("option");
		option.setAttribute("class", "boloc_select");
		option.text = e.label;
		option.setAttribute("value", i);
		selectTag.add(option, selectTag[i]);
    })
	selectTag.addEventListener('change', function(e) {
		filterByDobSelectedOption = e.target.value * 1;
		updateTable();
    });

	function isUsingFilterType(){
        for(let i=0; i<filterByType.length; i++){
            if(filterByType[i].status) return true;
        }
        return false;
    }
    function isUsingFilterGender(){
        for(let i=0; i<filterByGender.length; i++){
            if(filterByGender[i].status) return true;
        }
        return false;
    }


	document.querySelector("#client_input_filter").addEventListener('input', function(e){
        filterByString = e.target.value;
        updateTable();
    });

	function updateTable(){
        let hasAtLeastOneMatchedRow = false;
        for(let i=0; i<allClients.length; i++){
            let tRow = allClients[i];
            let tColumnName = tRow.querySelector(".client_row_name").innerHTML;
            let tColumnPhone = tRow.querySelector(".client_row_phone").innerHTML;
			let tColumnEmail = tRow.querySelector(".client_row_email").innerHTML;
			let tColumnType = tRow.querySelector("#client_typeId").innerHTML * 1;
            let tColumnGender = tRow.querySelector("#client_genderId").innerHTML * 1;
			let tColumnDob = (new Date(tRow.querySelector("#client_dob").innerHTML)).getMonth() + 1;
            
            if(!(tColumnName.toLowerCase().includes(filterByString.toLowerCase())
                || tColumnPhone.toLowerCase().includes(filterByString.toLowerCase())
				|| tColumnEmail.toLowerCase().includes(filterByString.toLowerCase())
				&& filterByString.length > 0) 
				|| (tColumnDob*1 !== filterByDobSelectedOption*1 && filterByDobSelectedOption !== 0)){
				tRow.classList.add("hide_row");
            }
			else if((!filterByType[tColumnType].status && isUsingFilterType())
                    || (!filterByGender[tColumnGender].status && isUsingFilterGender())){
                tRow.classList.add("hide_row");
            }
			else{
                tRow.classList.remove("hide_row");
                hasAtLeastOneMatchedRow = true;
            }
        }

        if (hasAtLeastOneMatchedRow) {
            document.querySelector("#client_row_empty").classList.add("hide_empty");
        }else{
            document.querySelector("#client_row_empty").classList.remove("hide_empty");
        }
    }

	</script>