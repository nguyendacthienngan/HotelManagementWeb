<%= form_with url: "/cooperate_reservation/new", method: :get do |form| %>

  <div class="row">
    <div class="dropdown col-md">
      <%= form.collection_select nil, RoomType.all, :id, :name,{include_blank: false, selected: params[:room_type_id]}, {class: 'form-select', id:'choose_room_type'}%>
    </div>
    <div class="dropdown col-md">
      <%= form.text_field :arrival_date,
                          data: {
                            controller: "flatpickr",
                            flatpickr_date_format: "d/m/Y",
                            flatpickr_min_date: Time.zone.now
                          },
                          class: "form-select read-only-white",
                          placeholder: "Ngày đến"%>
    </div>
    <div class="dropdown col-md">
      <%= form.text_field :leave_date,
                          data: {
                            controller: "flatpickr",
                            flatpickr_date_format: "d/m/Y",
                            flatpickr_min_date: Time.zone.now
                          },
                          class: "form-select read-only-white",
                          placeholder: "Ngày đi"%>

    </div>
<% end %>

    <div class="btn btn-primary col-md-2" onclick="searchRooms()">Tìm kiếm</div>
  </div>
  <br>
  <%#= render :partial => 'quick_choose_rooms', :locals=>{:form=>form} %>
  <br>
  <div class="btn btn-primary", style="float:right" onclick="pay()">
    Thanh toán
  </div>

  <br> <br>
  <br>
  <div class="row w-100">
    <div class="col-lg">
      <!--    Bảng kết quả tìm kiếm -->

      <% @room_types.each do |room_type| %>
        <div class="card" id="<%= room_type.id %>">
          <div id="rooms_header"class="card-header">
            Loại <%= room_type.name %>
            <span class="fa fa-sort-down toggle-list"></span>
          </div>
          <% @rooms = Room.where(room_type_id: room_type.id, status: 1) %>
          <% @rooms = @rooms + @rooms_status_2 %>
          <div class="row card-body">
            <% @rooms.each do |room| %>
              <div id="<%= room.name %>" class="room btn btn-light col-md-3 m-1">
                <%= room.name %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>

    <!--    Kết quả lựa chọn -->
    <div class="col-lg  card h-100">
      <div id="result_header" class="card-header">
        <h4>Phòng đã chọn</h4>
        <div> Từ ngày <%= params[:arrival_date] || (DateTime.now).strftime("%d/%m/%Y") %> - Đến ngày <%= params[:leave_date] || (DateTime.now).strftime("%d/%m/%Y") %> </div>
      </div>
      <% @room_types.each do |room_results| %>
        <div class="card-body">
          <div class="">
            <div class="" style="float:right">
              <span class="fa fa-close"></span>
            </div>
            <div class="">
              <h5><%= room_results.name %></h5>
            </div>
          </div>
          <p>SL: <span id="amount_<%=room_results.id%>">0</span> - <%= @room_prices["#{room_results.name}"] %></p>
          <div id="result_<%= room_results.id  %>" class="row results_chip">
          </div>
        </div>
      <% end %>
    </div>
  </div>




<script>
    // [{room_type: {id: 1, count: x, rooms: []  }}]
    let room_types = {}
    let rooms = [];
    $(document).ready(function(){
        $('#arrival_date').val('<%= params[:arrival_date] || (DateTime.now).strftime("%d/%m/%Y") %>')
        $('#leave_date').val('<%= params[:leave_date] || (DateTime.now).strftime("%d/%m/%Y") %>')
    })

    function setRooms(rooms){
        // Using Session
        if (typeof(Storage) !== "undefined") {
            sessionStorage.setItem("rooms", rooms);
            // console.log(sessionStorage.getItem('rooms'));
        }
    }
    function getRooms(){
        if (typeof(Storage) !== "undefined") {
            return sessionStorage.getItem('rooms')
        }
        return null
    }
    function searchRooms(){
        let room_type_id = $('#choose_room_type').val();
        let arrival_date = $('#arrival_date').val();
        let leave_date = $('#leave_date').val();
        if (!arrival_date)
            arrival_date = "<%= (DateTime.now).strftime("%d/%m/%Y") %>"
        if (!leave_date)
            leave_date =  "<%= (DateTime.now).strftime("%d/%m/%Y") %>"

        let theURL = '/cooperate_reservation/choose_rooms?room_type_id=' + room_type_id + '&arrival_date=' + arrival_date + '&leave_date=' + leave_date;
        window.location.href = theURL
    }

    function pay(){
        let chosen_rooms = []
        let i = 0
        if (rooms.length > 0)
        {
            for (i in rooms)
            {
                let room = {id: rooms[i]};
                chosen_rooms.push(room)
            }
            $.ajax({
                type: "POST",
                url: "/cooperate_reservation/choose_rooms",
                // The key needs to match your method's input parameter (case-sensitive).
                data: JSON.stringify(
                    {
                        arrival_date: $('#arrival_date').val(),
                        leave_date: $('#leave_date').val(),
                        rooms: chosen_rooms
                    }),
                contentType: "application/json; charset=utf-8"
            });
        }
        else
        {
            alert("Please choose at least 1 room")
        }
    }
    $('.toggle-list').on('click' ,function(e) {
        let toggleButton = $(e.target);
        let card = $(this).closest('.card');
        let cardBody = card.find('.card-body');

        if (toggleButton.hasClass('fa-sort-down'))
        {
            toggleButton.removeClass('fa-sort-down')
            toggleButton.addClass('fa-sort-up row align-items-center')
            cardBody.hide("fast")

        }
        else if (toggleButton.hasClass('fa-sort-up'))
        {
            toggleButton.removeClass('fa-sort-up row align-items-center')
            toggleButton.addClass('fa-sort-down')
            cardBody.show("fast")
        }


    });
    $('.room').click(function(e){
        // Change button state
        let target = $(e.target)
        let id = e.target.id
        let result_id = "result_" + id

        let room_type = $(this).closest('.card')
        let room_type_id = "#result_" + room_type.attr('id').toString()
        let room_type_name = room_type.attr('id').toString()



        let amount_reserve_id = '#amount_' + room_type.attr('id').toString()
        let amount_reserve = $(amount_reserve_id).text()
        amount_reserve = parseInt(amount_reserve)

        if (target.text() != "✓")
        {
            amount_reserve = ++amount_reserve
            rooms.push(id)
            let rooms_string =  '[' +  rooms.toString() + ']'
            console.log("COUNT: " , amount_reserve)
            let room_type_object = {id: room_type_name, count: amount_reserve, chosen_rooms:  rooms.toString()}
            room_types[room_type_name] = room_type_object

            setRooms(rooms)
            target.removeClass('inactive-room')
            target.addClass('active-room')
            target.text("✓")
            // Add to results
            let string = "<div id=" + result_id + " class='col-md-3 chip'>" + e.target.id + "</div>"

            $(room_type_id).append(string)
            $(amount_reserve_id).text(amount_reserve)
        }
        else
        {
            let room_index = rooms.indexOf(id);
            if (room_index > -1) {
                rooms.splice(room_index, 1);
            }
            if (room_index > -1)
            {
                const r_type = room_types[room_type_name]
                if (r_type)
                {
                    let rs = r_type.chosen_rooms
                    rs = rs.split(', ')
                    if (rs.length > 0)
                    {
                        console.log("id", id)
                        console.log("room_index", room_index)
                        console.log("count", r_type["count"])
                        r_type["count"] = r_type["count"] - 1
                        rs.splice(room_index, 1)
                        if (r_type["count"] <= 0)
                            delete room_types[room_type_name]
                        console.log("room_types: ", room_types)
                    }
                }


            }
            target.text(e.target.id)
            target.addClass('inactive-room')
            target.removeClass('active-room')
            $('#' + result_id).remove()

            $(amount_reserve_id).text(--amount_reserve)
        }

    })

</script>