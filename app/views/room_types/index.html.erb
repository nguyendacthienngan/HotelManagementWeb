<div class="employee_top_breadcrumb">
    <nav class="page-section" style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
      <div class="row">
        <div class="col-sm-6">
          <div class="d-flex justify-content-start">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="#">Cấu hình</a></li>
              <li class="breadcrumb-item active" aria-current="page">Loại phòng</li>
            </ol>
          </div>
        </div>
      </div>
    </nav>
  </div>

<div class="roomtypes_main_view">

    <div class="left_container">
        <div class="section_name" >
        Danh sách: <%= @room_types.ids.count %> loại phòng
        </div>
        <table>
            <tr>
                <th class="roomType_row_title_infoBasic">LOẠI PHÒNG</th>
                <th class="roomType_row_title_beds">SỐ GIƯỜNG</th>
                <th class="roomType_row_title_available">SỐ NGƯỜI LỚN</th>
                <th class="roomType_row_title_description">MÔ TẢ</th>
            </tr>

            <% @room_types.each do |room_type| %>
                <tr class="roomType_row">
                    <td class="roomType_row_infoBasic">
                        <div class="info_basic_container">
                            <span class="roomType_row_name"><%= room_type.name %></span>
                            <span class="roomType_row_id hide"><%= room_type.id %></span>
                        </div>
                    </td>
                    <td class="roomType_row_beds"><%= room_type.beds %></td>
                    <td class="roomType_row_available"><%= room_type.available_rooms %></td>
                    <td class="roomType_row_description"><%= room_type.description %></td>
                </tr>
            <% end %>
            
        </table>
        <div id="roomType_row_empty" class="hide_empty">
            <i class="fas fa-exclamation-triangle"></i>
            <span>No row matched !</span>
        </div>
    </div>


    <div class="right_container">
        <div class="section_name">Hành động</div>
        <div class="functionalities ">
        <%= link_to new_room_type_path do%><div class="functionality_add btn btn-primary">Thêm</div><% end %>
        </div>
        <div class="functionalities">
            <div id="roomType_btn_show" class="functionality_item ">Xem</div>
            <div id="roomType_btn_delete" class="functionality_item ">Xóa</div>
            <div id="roomType_btn_edit" class="functionality_item ">Sửa</div>
        </div>

        <div class="section_name">Tìm kiếm</div>
        <div class="timkiem_container">
            <input id="roomType_input_filter"/>
        </div>

        <div class="section_name">Bộ lọc tìm kiếm</div>

        <div class="boloc_container">
            <div id="boloc_roomType_beds"><strong> > Số giường</strong>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedID;
    let allRoomTypes = document.querySelectorAll(".roomType_row");
    let allButtonNotClick = document.querySelectorAll(".functionality_item");
    let filterByString = '';
    let filterByBeds = [
        {
            label: "1 giường",
            status: false
        },
        {
            label: "2 giường",
            status: false
        },
        {
            label: "3 giường",
            status: false
        },
    ];
    // RenderFilterBedsCheckboxes
    filterByBeds.forEach((e,i) => {
        let divTag = document.createElement("div");
        divTag.setAttribute("class", "boloc_item");
        divTag.innerHTML = `
            <input class="boloc_checkbox" type="checkbox"/>
            <span class="boloc_label">${e.label}</span>
        `
        divTag.addEventListener('change', function() {
            filterByBeds[i].status = this.querySelector(".boloc_checkbox").checked;
            updateTable();
        });
        document.querySelector("#boloc_roomType_beds").append(divTag);
        
    })
    
    for(let i=0; i<allRoomTypes.length; i++){
        allRoomTypes[i].addEventListener('click', function(){
            for (let previousSelectedRow of document.querySelectorAll(".row_selected")) {
                previousSelectedRow.classList.remove("row_selected");
            }
            
            selectedID = allRoomTypes[i].querySelector(".roomType_row_id").innerHTML * 1;
            this.classList.add("row_selected");
            for(let i=0; i<allButtonNotClick.length; i++){
                allButtonNotClick[i].classList.remove("functionality_item");
                allButtonNotClick[i].classList.add("button_selected");
            }
        });
    }

    document.querySelector("#roomType_btn_edit").addEventListener('click', function(){
        if (selectedID > 0) {
            window.location = `${window.location}/${selectedID}/edit`;
        }
        
    });
    document.querySelector("#roomType_btn_show").addEventListener('click', function(){
        if (selectedID > 0) {
            window.location = `${window.location}/${selectedID}`;
        }
    });

    function isUsingFilterBeds(){
        for(let i=0; i<filterByBeds.length; i++){
            if(filterByBeds[i].status) return true;
        }
        return false;
    }
    function isUsingFilterAvailable(){
        for(let i=0; i<filterByAvailable.length; i++){
            if(filterByAvailable[i].status) return true;
        }
        return false;
    }

    document.querySelector("#roomType_input_filter").addEventListener('input', function(e){
        filterByString = e.target.value;
        updateTable();
    });

    function updateTable(){
        let hasAtLeastOneMatchedRow = false;
        for(let i=0; i<allRoomTypes.length; i++){
            
            let tRow = allRoomTypes[i];
            let tColumnDescription = tRow.querySelector(".roomType_row_description").innerHTML;
            let tColumnBeds = tRow.querySelector(".roomType_row_beds").innerHTML * 1;
            let tColumnAvailable = tRow.querySelector(".roomType_row_available").innerHTML * 1;

            if(!(tColumnDescription.toLowerCase().includes(filterByString.toLowerCase()))
                && filterByString.length > 0){
                tRow.classList.add("hide_row");
            }
            else if((!filterByBeds[tColumnBeds-1].status && isUsingFilterBeds())){
                tRow.classList.add("hide_row");
            }
            else{
                tRow.classList.remove("hide_row");
                hasAtLeastOneMatchedRow = true;
            }
        }
        
        if (hasAtLeastOneMatchedRow) {
            document.querySelector("#roomType_row_empty").classList.add("hide_empty");
        }else{
            document.querySelector("#roomType_row_empty").classList.remove("hide_empty");
        }
    }
</script>