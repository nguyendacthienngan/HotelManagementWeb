

<div class="employee_top_breadcrumb">
  <nav class="page-section" style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
      <div class="row">
      <div class="col-sm-6">
          <div class="d-flex justify-content-start">
          <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="#">Cấu hình</a></li>
              <li class="breadcrumb-item active" aria-current="page">Phòng</li>
          </ol>
          </div>
      </div>
      </div>
  </nav>

</div>

<div class="room_main_view">

  <div class="left_container">
      <div class="section_name" >
          Danh sách: <%= @rooms.ids.count %> phòng
      </div>
      <table>
          <tr>
              <th class="room_row_title_infoBasic">TÊN PHÒNG</th>
              <th class="room_row_title_type">LOẠI PHÒNG</th>
              <th class="room_row_title_price">GIÁ</th>
              <th class="room_row_title_floor">TẦNG</th>
              <th class="room_row_title_description">MÔ TẢ</th>
              <th class="room_row_title_status">TRẠNG THÁI</th>
          </tr>


          <% @rooms.each do |room| %>
              <tr class="room_row">
                  <td class="room_row_infoBasic">
                      <div class="info_basic_container">
                          <span class="room_row_name"><%= room.name %></span>
                          <span class="room_row_id hide"><%= room.id %></span>
                      </div> 
                  </td>
                  <td class="room_row_type">
                      <!-- <span ><%= RoomType.find(room.room_type_id).name %></span> -->
                      <span id="room_typeId" class="hide" ><%= room.room_type_id %></span>
                      <% index =  room.room_type_id - 1 %>
					    <span><%= @room_type[index][:text] %></span>
                  </td>
                  <td class="room_row_sprice">
                      <span id="room_priceId"><%= RoomPrice.find(RoomType.find(room.room_type_id).id).price %></span>
                  </td>

                    <td class="room_row_floor" id="room_floorId"> <%= room.floor %> 
                    </td>
                  <td class="room_row_description" id="room_descriptionId"> <%= room.description %> </td>
                  <td class="room_row_status">
                    <span id="room_statusId" class="hide"><%= room.status %></span>
                      <% if room.status == 0 %>
                            <span class="badge rounded-pill bg-primary room_status_empty">Trống</span>
                        <% elsif room.status == 1 %>
                            <span class="badge rounded-pill bg-danger room_status_reserved">Đã đặt</span>
                        <% elsif room.status == 2 %>
                            <span class="badge rounded-pill bg-danger room_status_late_arrival">Quá hạn </span>
                        <% elsif room.status == 3 %>
                            <span class="badge rounded-pill bg-danger room_status_nonempty">Đang ở</span>
                        <% elsif room.status == 4 %>
                            <span class="badge rounded-pill bg-danger room_status_dirty">Bẩn</span>
                        <% end %>
                  </td>
              </tr>
          <% end %>
      </table>
      <div id="room_row_empty" class="hide_empty">
          <i class="fas fa-exclamation-triangle"></i>
          <span>No row matched !</span>
      </div>
  </div>

  <div class="right_container">
    <div class="section_name">Hành động</div>
    <div class="functionalities ">
    <%= link_to new_room_path do%><div class="functionality_add btn btn-primary">Thêm</div><% end %>
    </div>
    <div class="functionalities">
        <div id="room_btn_show" class="functionality_item">Xem</div>
        <div id="room_btn_delete" class="functionality_item ">Xóa</div>
        <div id="room_btn_edit" class="functionality_item ">Sửa</div>
    </div>

    <div class="section_name">Tìm kiếm</div>
    <div class="timkiem_container">
        <input id="room_input_filter"/>
    </div>

    <div class="section_name">Bộ lọc tìm kiếm</div>

    <div class="boloc_container">
        <div id="boloc_room_status"><strong> > Trạng thái</strong>
        </div>
        <div id="boloc_room_type"><strong> > Loại phòng</strong>
        </div>
        <div id="boloc_room_floor"><strong> > Tầng</strong>
        </div>
        <div id="boloc_room_price"><strong> > Giá</strong>
          <div class="timkiem_price">
            <input id="room_input_filter_priceFroom" placeholder="Tối thiểu"/>
            _
            <input id="room_input_filter_priceTo" placeholder="Tối đa"/>
            <div id="btn_ApDungChoised" class="btn_ApDung">Áp dụng</div>
          </div>
        </div>
    </div>

</div>


<script>
  let selectedID;

  // Map all HTML Row to Array JS
  let allRooms = document.querySelectorAll(".room_row");
  let allButtonNotClick = document.querySelectorAll(".functionality_item");
  let filterByPriceFrom = ''; let filterByPriceTo = '';
  let filterByString = '';
  let filterByStatus = [
      {
          label: "Trống",
          status: false
      },
      {
          label: "Đã đặt",
          status: false
      },
      {
          label: "Quá hạn",
          status: false
      },
      {
          label: "Đang ở",
          status: false
      },
      {
          label: "Dơ",
          status: false
      },
  ];
  let filterByType = [
      {
          label: "Standard",
          status: false
      },
      {
          label: "Superior Twin",
          status: false
      },
      {
          label: "Superior Double",
          status: false
      },
      {
          label: "Deluxe Twin",
          status: false
      },
      {
          label: "Deluxe Double",
          status: false
      },
      {
          label: "Suite Double",
          status: false
      },
  ];
  let filterByFloor = [
      {
          label: "Tầng 1",
          status: false
      },
      {
          label: "Tầng 2",
          status: false
      },
      {
          label: "Tầng 3",
          status: false
      },
  ];
    let filterByPriceMin = 0;
    let filterByPriceMax = 0;
    btn_ApDungChoised.addEventListener('click', function() {
        let minPrice = document.querySelector("#room_input_filter_priceFroom").value * 1;
        let maxPrice = document.querySelector("#room_input_filter_priceTo").value * 1;
        if (minPrice<=maxPrice || maxPrice===0) {
            filterByPriceMin = minPrice ; 
            filterByPriceMax = maxPrice;
            updateTable();
        } else {
            alert('Giá trị giá tối thiểu phải bé hơn giá trị giá tối đa');
        }
    });
  // RenderFilterStatusCheckboxes
  filterByStatus.forEach((e,i) => {
      let divTag = document.createElement("div");
      divTag.setAttribute("class", "boloc_item");
      divTag.innerHTML = `
          <input class="boloc_checkbox" type="checkbox"/>
          <span class="boloc_label">${e.label}</span>
      `
      divTag.addEventListener('change', function() {
          filterByStatus[i].status = this.querySelector(".boloc_checkbox").checked;
          updateTable();
      });
      document.querySelector("#boloc_room_status").append(divTag);
      
  })
  // RenderFilterTypeCheckboxes
  filterByType.forEach((e,i) => {
        let divTag = document.createElement("div");
        divTag.setAttribute("class", "boloc_item");
        divTag.innerHTML = `
            <input class="boloc_checkbox" type="checkbox"/>
            <span class="boloc_label">${e.label}</span>
        `
        divTag.addEventListener('change', function() {
            filterByType[i].status = this.querySelector(".boloc_checkbox").checked;
            updateTable();
        });
        document.querySelector("#boloc_room_type").append(divTag);
    })
    // RenderFilterFloorCheckboxes
    filterByFloor.forEach((e,i) => {
        let divTag = document.createElement("div");
        divTag.setAttribute("class", "boloc_item");
        divTag.innerHTML = `
            <input class="boloc_checkbox" type="checkbox"/>
            <span class="boloc_label">${e.label}</span>
        `
        divTag.addEventListener('change', function() {
          filterByFloor[i].status = this.querySelector(".boloc_checkbox").checked;
            updateTable();
        });
        document.querySelector("#boloc_room_floor").append(divTag);
        
    })


  // Add onclick listener to each row
  for(let i=0; i<allRooms.length; i++){
    allRooms[i].addEventListener('click', function(){
          // Remove all color of previous selected row
          for (let previousSelectedRow of document.querySelectorAll(".row_selected")) {
              previousSelectedRow.classList.remove("row_selected");
          }
          
          selectedID = allRooms[i].querySelector(".room_row_id").innerHTML * 1;
          this.classList.add("row_selected");
          for(let i=0; i<allButtonNotClick.length; i++){
              allButtonNotClick[i].classList.remove("functionality_item");
              allButtonNotClick[i].classList.add("button_selected");
          }
      });
  }

  document.querySelector("#room_btn_edit").addEventListener('click', function(){
      if (selectedID > 0) {
          window.location = `${window.location}/${selectedID}/edit`;
      }
      
  });
  document.querySelector("#room_btn_show").addEventListener('click', function(){
      if (selectedID > 0) {
          window.location = `${window.location}/${selectedID}`;
      }
  });

  document.querySelector("#room_input_filter").addEventListener('input', function(e){
      filterByString = e.target.value;
      updateTable();
  });

  

  function isUsingFilterStatus(){
      for(let i=0; i<filterByStatus.length; i++){
          if(filterByStatus[i].status) return true;
      }
      return false;
  }
  function isUsingFilterType(){
      for(let i=0; i<filterByType.length; i++){
          if(filterByType[i].status) return true;
      }
      return false;
  }
  function isUsingFilterFloor(){
      for(let i=0; i<filterByFloor.length; i++){
          if(filterByFloor[i].status) return true;
      }
      return false;
  }

  function updateTable(){
      let hasAtLeastOneMatchedRow = false;
      for(let i=0; i<allRooms.length; i++){
          let tRow = allRooms[i];
          let tColumnName = tRow.querySelector(".room_row_name").innerHTML;
          let tColumnDescription = tRow.querySelector(".room_row_description").innerHTML;
          let tColumnStatus = tRow.querySelector("#room_statusId").innerHTML * 1;
          let tColumnType = tRow.querySelector("#room_typeId").innerHTML * 1;
          let tColumnFloor = tRow.querySelector("#room_floorId").innerHTML * 1;
          let tColumnPrice = tRow.querySelector("#room_priceId").innerHTML * 1;
          // Fiter by String
          if(!(tColumnName.toLowerCase().includes(filterByString.toLowerCase())
                || tColumnDescription.toLowerCase().includes(filterByString.toLowerCase())
                && filterByString.length > 0)
                || (((tColumnPrice < filterByPriceMin && filterByPriceMin > 0) || (tColumnPrice > filterByPriceMax && filterByPriceMax > 0)) && filterByString.length <= 0)){
              tRow.classList.add("hide_row");
          }
          
          // Filter by Gender
          else if((!filterByStatus[tColumnStatus].status && isUsingFilterStatus())
                  ||(!filterByType[tColumnType-1].status && isUsingFilterType())
                  ||(!filterByFloor[tColumnFloor-1].status && isUsingFilterFloor())){
              tRow.classList.add("hide_row");
          }
          else{
              tRow.classList.remove("hide_row");
              hasAtLeastOneMatchedRow = true; 
          }
      }

      
      if (hasAtLeastOneMatchedRow) {
          document.querySelector("#room_row_empty").classList.add("hide_empty");
      }else{
          document.querySelector("#room_row_empty").classList.remove("hide_empty");
      }
  }
  
</script>
